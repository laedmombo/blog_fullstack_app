{"ast":null,"code":"var _jsxFileName = \"/home/tout/blog_bm/front/src/route/NewPost.js\";\nimport { Formik, Form, ErrorMessage, useField } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewPost() {\n  var _s = $RefreshSig$();\n\n  const inputSchema = yup.object({\n    category: yup.string().matches(/^[a-zA-Z0-9]+$/, 'Must not include symbols').max(15, 'category must be 15 characters or less').required('category required'),\n    autho: yup.string().matches(/^[a-zA-Z0-9]+$/, 'Must not include symbols').max(25, 'author must be 25 characters or less').required('autho required'),\n    content: yup.string().matches(/^[a-zA-Z0-9]+$/, 'Must not include symbols').max(255, 'content must be 255 characters or less').required('content required')\n  });\n\n  const MyField = props => {\n    _s();\n\n    const [field, meta] = useField(props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: 'newPost__input ${meta.touched && meta.error && newPost__submitButton--red}',\n        ...props,\n        ...field\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: field.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(MyField, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n    return [useField];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Add new post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: \"category: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_c = NewPost;\nexport default NewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"sources":["/home/tout/blog_bm/front/src/route/NewPost.js"],"names":["Formik","Form","ErrorMessage","useField","yup","NewPost","inputSchema","object","category","string","matches","max","required","autho","content","MyField","props","field","meta","name"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,YAAvB,EAAqCC,QAArC,QAAqD,QAArD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAEA,SAASC,OAAT,GAAkB;AAAA;;AAEd,QAAMC,WAAW,GAAGF,GAAG,CAACG,MAAJ,CAAW;AAC3BC,IAAAA,QAAQ,EAAEJ,GAAG,CACRK,MADK,GAELC,OAFK,CAEG,gBAFH,EAEqB,0BAFrB,EAGLC,GAHK,CAGD,EAHC,EAGG,wCAHH,EAILC,QAJK,CAII,mBAJJ,CADiB;AAO3BC,IAAAA,KAAK,EAAET,GAAG,CACLK,MADE,GAEFC,OAFE,CAEM,gBAFN,EAEwB,0BAFxB,EAGFC,GAHE,CAGE,EAHF,EAGM,sCAHN,EAIFC,QAJE,CAIO,gBAJP,CAPoB;AAa3BE,IAAAA,OAAO,EAAEV,GAAG,CACPK,MADI,GAEJC,OAFI,CAEI,gBAFJ,EAEsB,0BAFtB,EAGJC,GAHI,CAGA,GAHA,EAGK,wCAHL,EAIJC,QAJI,CAIK,kBAJL;AAbkB,GAAX,CAApB;;AAoBA,QAAMG,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB,UAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBf,QAAQ,CAACa,KAAD,CAA9B;AAEA,wBACI;AAAA,8BACI;AACI,QAAA,SAAS,EAAE,4EADf;AAAA,WAEQA,KAFR;AAAA,WAGQC;AAHR;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEA,KAAK,CAACE;AAA1B;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH,GAdD;;AAtBc,KAsBRJ,OAtBQ;AAAA,YAuBYZ,QAvBZ;AAAA;;AAsCd,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA,6BACI,QAAC,IAAD;AAAA,+BACI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;KAhDQE,O;AAkDT,eAAeA,OAAf","sourcesContent":["import { Formik, Form, ErrorMessage, useField } from 'formik'\nimport * as yup from 'yup'\n\nfunction NewPost(){\n\n    const inputSchema = yup.object({\n        category: yup\n            .string()\n            .matches(/^[a-zA-Z0-9]+$/, 'Must not include symbols')\n            .max(15, 'category must be 15 characters or less')\n            .required('category required'),\n        \n        autho: yup\n            .string()\n            .matches(/^[a-zA-Z0-9]+$/, 'Must not include symbols')\n            .max(25, 'author must be 25 characters or less')\n            .required('autho required'),\n\n        content: yup\n            .string()\n            .matches(/^[a-zA-Z0-9]+$/, 'Must not include symbols')\n            .max(255, 'content must be 255 characters or less')\n            .required('content required'),\n    })\n\n    const MyField = (props) => {\n        const [field, meta] = useField(props)\n\n        return(\n            <div>\n                <input \n                    className={'newPost__input ${meta.touched && meta.error && newPost__submitButton--red}'}\n                    {...props}\n                    {...field}\n                />\n                <br />\n                <ErrorMessage name={field.name}/>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <h1> Add new post</h1>\n            <Formik>\n                <Form>\n                    <label htmlFor='category'>category: </label>\n                </Form>\n            </Formik>\n        </div>\n    )\n}\n\nexport default NewPost"]},"metadata":{},"sourceType":"module"}